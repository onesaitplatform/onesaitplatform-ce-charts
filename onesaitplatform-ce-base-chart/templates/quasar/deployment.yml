{{- if .Values.global.deployQuasar }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "onesait-platform.quasar.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "onesait-platform.quasar.name" . }}
    group: {{ .Values.global.groupName }}
spec:
  replicas: {{ .Values.global.replicaInitCount }}
  selector:
    matchLabels:
      app: {{ include "onesait-platform.quasar.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "onesait-platform.quasar.name" . }}
    spec:
{{- if .Values.global.affinityNodeRules }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ include "onesait-platform.quasar.name" . }}
            topologyKey: "kubernetes.io/hostname"
{{ end }}
{{- if .Values.global.setNodesOnDeployments }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                {{- range .Values.global.workerNodes }}
                - {{ .node }}
                {{- end }}

{{ end }}
      containers:
      - name: {{ include "onesait-platform.quasar.name" . }}
        image: "{{ .Values.quasar.image.repository }}:{{ .Values.quasar.image.tag }}"
        imagePullPolicy: {{ .Values.quasar.image.pullPolicy }}
{{- if .Values.global.healthChecksEnabled }}
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 100
          periodSeconds: 5
          successThreshold: 2
          tcpSocket:
            port: {{ .Values.quasar.service.targetPort }}
          timeoutSeconds: 2
{{- end }}
        env:
        - name: AUTHDB
          value: {{ .Values.quasar.env.authDb }}
        - name: AUTHPARAMS
          value: {{ .Values.quasar.env.authParams }}
        - name: REALTIMEDBSERVERS
          value: {{ .Values.quasar.env.realtimeDbServers }}
        ports:
        - containerPort: {{ .Values.quasar.service.targetPort }}
          name: 10800tcp108002
          protocol: TCP
{{- if .Values.global.limitsEnabled }}
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "1m"
            memory: "1Mi"
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
{{- end }}
