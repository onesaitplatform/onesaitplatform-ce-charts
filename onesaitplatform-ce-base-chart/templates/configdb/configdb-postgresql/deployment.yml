{{- if and (not .Values.global.externalDatabase) (eq .Values.global.configDbType "postgresql") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "onesait-platform.configdb.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "onesait-platform.configdb.name" . }}
    group: {{ .Values.global.groupName }}
spec:
  replicas: {{ .Values.global.replicaInitCount }}
  selector:
    matchLabels:
      app: {{ include "onesait-platform.configdb.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "onesait-platform.configdb.name" . }}
    spec:
{{- if .Values.global.setNodesOnDeployments }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.global.nodeKey }}
                operator: In
                values:
                {{- range .Values.global.workerNodes }}
                - {{ .node }}
                {{- end }}

{{ end }}

      containers:
      - name: {{ include "onesait-platform.configdb.name" . }}
        image: "{{ .Values.configdb.image.repository }}:{{ .Values.configdb.image.tag }}"
        imagePullPolicy: {{ .Values.configdb.image.pullPolicy }}
{{- if .Values.global.healthChecksEnabled }}
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 2
          tcpSocket:
            port: {{ .Values.configdb.service.targetPort }}
          timeoutSeconds: 2
{{- end }}
        ports:
        - containerPort: {{ .Values.configdb.service.targetPort }}
          name: 5432tcp54322
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: configdb-data
{{- if (not .Values.global.localStorageEnabled) }}
          subPath: configdb
{{- end }}
{{- if .Values.global.limitsEnabled }}
        resources:
          limits:
            cpu: "500m"
            memory: "800Mi"
          requests:
            cpu: "1m"
            memory: "128Mi"
{{- end }}
      dnsPolicy: ClusterFirst
{{- if .Values.global.sideCarContainersEnabled }}
      initContainers:
       - name: volume-mount
         image: busybox
         command: ["sh", "-c", "chmod 777 /var/lib/postgresql/data"]
         volumeMounts:
         - name: configdb-data
           mountPath: /var/lib/postgresql/data
         resources:
           limits:
             cpu: "1"
             memory: "500Mi"
           requests:
             cpu: "1m"
             memory: "1Mi"
{{- end }}
      restartPolicy: Always
      volumes:
      - name: configdb-data
        persistentVolumeClaim:
          claimName: configdb-pvc
{{ end }}
