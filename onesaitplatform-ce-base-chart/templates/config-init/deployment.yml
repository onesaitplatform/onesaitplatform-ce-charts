{{- if and .Values.global.deployConfigInit (not .Values.global.skipPersistenceDeployment) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "onesait-platform.configinit.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "onesait-platform.configinit.name" . }}
    group: {{ .Values.global.groupName }}
spec:
  replicas: {{ .Values.global.replicaInitCount }}
  selector:
    matchLabels:
      app: {{ include "onesait-platform.configinit.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "onesait-platform.configinit.name" . }}
    spec:
{{- if .Values.global.affinityNodeRules }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: app
                operator: NotIn
                values:
                - {{ include "onesait-platform.configinit.name" . }}
            weight: 100
{{ end }}
{{- if .Values.global.setNodesOnDeployments }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.global.nodeKey }}
                operator: In
                values:
                {{- range .Values.global.workerNodes }}
                - {{ .node }}
                {{- end }}

{{ end }}
      containers:
      - name: {{ include "onesait-platform.configinit.name" . }}
        image: "{{ .Values.configinit.image.repository }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: {{ .Values.configinit.image.pullPolicy }}
        env:
        - name: LOADELASTICDB
          value: "{{ .Values.configinit.env.loadElasticDb }}"
        - name: LOADMONGODB
          value: "{{ .Values.configinit.env.loadMongoDb }}"
        - name: SERVER_NAME
          value: "{{ .Values.global.env.serverName }}"
        - name: CONFIGDBMASTERURL
          value: "{{ .Values.global.env.configDbMasterUrl }}{{.Values.configinit.env.configDbMasterUrlCreateIfNotExists}}"
        - name: CONFIGDBURL
          value: "{{ .Values.global.env.configDbUrl }}"
        - name: CONFIGDBUSER
          value: "{{ .Values.global.env.configDbUser }}"
        - name: CONFIGDBPASS
          valueFrom:
            secretKeyRef:
              key: CONFIGDBPASS
              name: onesait-secret
        - name: CONFIGDB_DRIVER
          value: "{{ .Values.global.env.configDbDriver }}"
        - name: CONFIGDB_DIALECT
          value: "{{ .Values.global.env.configDbDialect }}"
        - name: REALTIMEDBUSER
          value: "{{ .Values.global.env.realtimeDbUser }}"
        - name: REALTIMEDBPASS
          valueFrom:
            secretKeyRef:
              key: REALTIMEDBPASS
              name: onesait-secret
        - name: REALTIMEDBSERVERS
          value: "{{ .Values.global.env.realtimeDbServers }}"
        - name: REALTIMEDBNAME
          value: "{{ .Values.global.env.realtimeDbName }}"
        - name: UPDATE_MODE_MULTITENANT
          value: "{{ .Values.configinit.env.multitenantMode }}"
        - name: RTDB_EXECUTION_TIMEOUT
          value: "{{ .Values.configinit.env.rtdbExecutionTimeout }}"
        - name: RTDB_QUERIES_LIMIT
          value: "{{ .Values.configinit.env.rtdbQueriesLimit }}"
        - name: MONGO_SOCKET_TIMEOUT
          value: "{{ .Values.configinit.env.mongoSocketTimeout }}"
        - name: MONGO_CONNECT_TIMEOUT
          value: "{{ .Values.configinit.env.mongoConnectTimeout }}"
        - name: MONGO_WAIT_TIME
          value: "{{ .Values.configinit.env.mongoWaitTime }}"
        - name: MONGO_POOL_SIZE
          value: "{{ .Values.configinit.env.mongoPoolSize }}"
        - name: MONGO_SSL_ENABLED
          value: "{{ .Values.configinit.env.mongoSslEnabled }}"
        - name: MONGO_USE_QUASAR
          value: "{{ .Values.global.deployQuasar }}"
        - name: IOTBROKER_SESSION_TIMEOUT
          value: "{{ .Values.configinit.env.iotBrokerTimeout }}"
        - name: LOADTESTDATA
          value: "{{ .Values.configinit.env.loadTestData }}"
        - name: ONESAIT_PROPERTIES
          value: "{{ .Values.configinit.env.onesaitProperties }}"
        - name: CREATE_DATAFLOW_INSTANCE_VERTICAL
          value: "{{ .Values.configinit.env.createDataFlowInstanceVertical }}"           
        ports:
        - containerPort: 21000
          name: 21000tcp210002
          protocol: TCP
{{- if .Values.global.limitsEnabled }}
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "1m"
            memory: "128Mi"
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
{{- end }}
