{{- if and (not .Values.global.flowengineHA) (.Values.global.nginxPlatformLegacyCompatibility) }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: engine-config
  namespace: {{ .Release.Namespace }}
data:
  engine-nginx.conf: >
    
{{- if .Values.deployment.selector.iotbroker }}    
    location ~ ^/(iot-broker/actuator*)/ {
      deny all;
      return 404;
    }

    location /iot-broker {
      set $hostv "iotbrokerservice:19000";
    proxy_pass http://iotbrokerservice:19000/iot-broker;

    proxy_read_timeout 360s;


    if ($uri ~ "^.*(swagger-ui|api-docs).*"){
      set $hostv $http_host;
    }


    proxy_set_header Host $hostv;


    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;

    proxy_set_header Connection "upgrade";

    proxy_set_header X-Forwarded-For $remote_addr;

    }
{{- end }}
{{- if .Values.deployment.selector.apimanager }}
    location ~ ^/(api-manager/actuator*)/ {
      deny all;
      return 404;
    }

    location /api-manager {

    proxy_pass http://apimanagerservice:19100/api-manager;

    proxy_read_timeout 360s;


    proxy_set_header Host $host;


    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;

    proxy_set_header Connection "upgrade";

    proxy_set_header X-Forwarded-For $remote_addr;


    }
{{- end }}
{{- if .Values.deployment.selector.flowengine }}
      location ~ ^/nodered/.*/metrics {
          deny all;
          return 404;
      }

      location /nodered/ {
            proxy_pass  http://flowengineservice:5050/;
          proxy_read_timeout 360s;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header X-Forwarded-For $remote_addr;
      }

    location ~ ^/(flowengine/actuator*)/ {
      deny all;
      return 404;
    }

      location /flowengine {
            proxy_pass  http://flowengineservice:20100;
          proxy_read_timeout 360s;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header X-Forwarded-For $remote_addr;
      }
{{- end }}
{{- if .Values.deployment.selector.oauthserver }}
    location ~ ^/(oauth-server/actuator*)/ {
      deny all;
      return 404;
    }

    location /oauth-server {
            proxy_pass  http://oauthservice:21000/oauth-server;
            proxy_read_timeout 360s;

          proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For $remote_addr;

    add_header 'Access-Control-Allow-Origin' '$http_origin' always;

    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type'
    always;

    add_header 'Access-Control-Allow-Credentials' 'true' always;

    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS' always;

    add_header 'Allow' 'GET,POST,OPTIONS' always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }
{{- end }}
        
{{- end }}